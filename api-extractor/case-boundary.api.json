{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.39.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/case-contract-testing/contract-case/tree/main/packages/case-boundary",
  "kind": "Package",
  "canonicalReference": "@contract-case/case-boundary!",
  "docComment": "/**\n * This is the [JSii](https://aws.github.io/jsii/user-guides/lib-author/toolchain/jsii/) layer that is the exported interface for ContractCase.\n *\n * Don't depend on this directly unless you are writing a custom wrapper for ContractCase.\n *\n * @packageDocumentation\n */\n",
  "name": "@contract-case/case-boundary",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@contract-case/case-boundary!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contract-case/case-boundary!BoundaryAnyMatcher:type",
          "docComment": "/**\n * This type is used for any matcher, when viewing through jsii\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BoundaryAnyMatcher = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types.jsii-boundary.ts",
          "releaseTag": "Public",
          "name": "BoundaryAnyMatcher",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contract-case/case-boundary!BoundaryAnyMockDescriptor:type",
          "docComment": "/**\n * This type is used for any matcher, when viewing through jsii\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BoundaryAnyMockDescriptor = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types.jsii-boundary.ts",
          "releaseTag": "Public",
          "name": "BoundaryAnyMockDescriptor",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contract-case/case-boundary!BoundaryAnyState:type",
          "docComment": "/**\n * This type is used for any matcher, when viewing through jsii\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BoundaryAnyState = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types.jsii-boundary.ts",
          "releaseTag": "Public",
          "name": "BoundaryAnyState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner:class",
          "docComment": "/**\n * A BoundaryContractDefiner allows defining contracts\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryContractDefiner "
            }
          ],
          "fileUrlPath": "src/BoundaryContractDefiner.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryContractDefiner",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner:constructor(1)",
              "docComment": "/**\n * Construct a BoundaryContractDefiner to allow defining contracts.\n *\n * @param config - A ContractCaseBoundaryConfig object for the configuration\n *\n * @param logPrinter - An ILogPrinter to enable printing logs\n *\n * @param resultPrinter - An IResultPrinter to enable printing results\n *\n * @param parentVersions - The names version(s) of the package(s) calling this, where each entry in the array contains a name and version, with the first entry in the array being the furthest package up the call stack.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractCaseBoundaryConfig",
                  "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ", logPrinter: "
                },
                {
                  "kind": "Reference",
                  "text": "ILogPrinter",
                  "canonicalReference": "@contract-case/case-boundary!ILogPrinter:interface"
                },
                {
                  "kind": "Content",
                  "text": ", resultPrinter: "
                },
                {
                  "kind": "Reference",
                  "text": "IResultPrinter",
                  "canonicalReference": "@contract-case/case-boundary!IResultPrinter:interface"
                },
                {
                  "kind": "Content",
                  "text": ", parentVersions: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logPrinter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "resultPrinter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parentVersions",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner#endRecord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endRecord(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "endRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner#runExample:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runExample(definition: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryMockDefinition",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryMockDefinition:interface"
                },
                {
                  "kind": "Content",
                  "text": ", runConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractCaseBoundaryConfig",
                  "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "definition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "runExample"
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner#runRejectingExample:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runRejectingExample(definition: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryMockDefinition",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryMockDefinition:interface"
                },
                {
                  "kind": "Content",
                  "text": ", runConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractCaseBoundaryConfig",
                  "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "definition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "runRejectingExample"
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractDefiner#stripMatchers:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stripMatchers(matcherOrData: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryAnyMatcher",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryAnyMatcher:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matcherOrData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stripMatchers"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryContractVerifier:class",
          "docComment": "/**\n * A BoundaryContractDefiner allows verifying contracts\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryContractVerifier "
            }
          ],
          "fileUrlPath": "src/BoundaryContractVerifier.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryContractVerifier",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractVerifier:constructor(1)",
              "docComment": "/**\n * Construct a BoundaryContractVerifier to allow verifying pre-written contracts.\n *\n * @param config - A ContractCaseBoundaryConfig object for the configuration\n *\n * @param IRunTestCallback - The callback to tell the test runner that it is running a test\n *\n * @param logPrinter - An ILogPrinter to enable printing logs\n *\n * @param resultPrinter - An IResultPrinter to enable printing results\n *\n * @param parentVersions - The names version(s) of the package(s) calling this, where each entry in the array contains a name and version, with the first entry in the array being the furthest package up the call stack.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractCaseBoundaryConfig",
                  "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunTestCallback",
                  "canonicalReference": "@contract-case/case-boundary!IRunTestCallback:interface"
                },
                {
                  "kind": "Content",
                  "text": ", logPrinter: "
                },
                {
                  "kind": "Reference",
                  "text": "ILogPrinter",
                  "canonicalReference": "@contract-case/case-boundary!ILogPrinter:interface"
                },
                {
                  "kind": "Content",
                  "text": ", resultPrinter: "
                },
                {
                  "kind": "Reference",
                  "text": "IResultPrinter",
                  "canonicalReference": "@contract-case/case-boundary!IResultPrinter:interface"
                },
                {
                  "kind": "Content",
                  "text": ", parentVersions: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logPrinter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "resultPrinter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parentVersions",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractVerifier#availableContractDescriptions:member(1)",
              "docComment": "/**\n * Returns a description of all of the contracts that can be found by the configuration.\n *\n * @returns either a `BoundaryFailure`, or a `BoundarySuccessWithAny` which contains an array of:\n * ```\n * CaseContractDescription {\n *     consumerName: string;\n *     providerName: string;\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "availableContractDescriptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "availableContractDescriptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryContractVerifier#runVerification:member(1)",
              "docComment": "/**\n * Run the verification of the contract(s) that can be found using the configuration provided. If you want to filter the contract(s), use the configOverrides to specify a Consumer or Provider name.\n *\n * @param configOverrides - A `ContractCaseBoundaryConfig` that defines any config options to override (after the ones provided in the constructor are applied)\n *\n * @returns `BoundarySuccess` if verification was successful, otherwise a `BoundaryFailure`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runVerification(configOverrides: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractCaseBoundaryConfig",
                  "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configOverrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "runVerification"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryCrashMessage:class",
          "docComment": "/**\n * Contains constants for the crash messages\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryCrashMessage "
            }
          ],
          "fileUrlPath": "src/boundary/BoundaryCrashMessage.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryCrashMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryCrashMessage.CRASH_MESSAGE_END:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CRASH_MESSAGE_END = "
                },
                {
                  "kind": "Content",
                  "text": "\"\\n\\nPlease open a bug report here:\\nhttps://github.com/case-contract-testing/case/issues/new\\n\\nIt would be great if you could include:\\n\\n* What you were doing when it failed\\n* The results of re-running with logLevel: \\\"maintainerDebug\\\"\\n\\nFor bonus points and internet karma, a reproducible \\ncode sample would be very helpful.\\n\\nSorry about this.\\n\\n---------------------------------------------------\\n!!!!\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8 ContractCase Crashed \\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8!!!!\\n---------------------------------------------------\\n\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CRASH_MESSAGE_END",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryCrashMessage.CRASH_MESSAGE_START:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CRASH_MESSAGE_START = "
                },
                {
                  "kind": "Content",
                  "text": "\"\\n---------------------------------------------------\\n!!!!\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8 ContractCase Crashed \\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8\\uD83D\\uDEA8!!!!\\n---------------------------------------------------\\n\\nThe ContractCase core has failed in an unexpected\\nway. This is almost certainly a bug in ContractCase.\\n\\nThe details are:\\n\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CRASH_MESSAGE_START",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryFailure:class",
          "docComment": "/**\n * This indicates a failure. Use `BoundaryFailureKindConstants` to determine what type of failure it is.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryFailure extends "
            },
            {
              "kind": "Reference",
              "text": "BoundaryResult",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundaryFailure.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryFailure",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailure:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BoundaryFailure` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kind",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "location",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailure#kind:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailure#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailure#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailure#resultType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resultType: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "RESULT_FAILURE",
                  "canonicalReference": "@contract-case/case-boundary!RESULT_FAILURE:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants:class",
          "docComment": "/**\n * Constants to use for determining what kind of failure you have\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryFailureKindConstants "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundaryFailureKindConstants.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryFailureKindConstants",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_BROKER_ERROR:member",
              "docComment": "/**\n * An error while contacting a contract broker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_BROKER_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_BROKER_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_CONFIGURATION_ERROR:member",
              "docComment": "/**\n * The user has configured ContractCase incorrectly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_CONFIGURATION_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_CONFIGURATION_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_CORE_ERROR:member",
              "docComment": "/**\n * Something went wrong in ContractCase internals. Almost certainly a bug.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_CORE_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_CORE_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_FAILED_ASSERTION_ERROR:member",
              "docComment": "/**\n * The test's expectations were not met\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_FAILED_ASSERTION_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_FAILED_ASSERTION_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_TRIGGER_ERROR:member",
              "docComment": "/**\n * The user-provided trigger failed when it was not expected to do so\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_TRIGGER_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_TRIGGER_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryFailureKindConstants.CASE_VERIFY_RETURN_ERROR:member",
              "docComment": "/**\n * The user-provided verification function (testResponse or testErrorResponse) failed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CASE_VERIFY_RETURN_ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CASE_VERIFY_RETURN_ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!BoundaryMockDefinition:interface",
          "docComment": "/**\n * This interface describes a Mock Definition, when viewing through jsii\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BoundaryMockDefinition "
            }
          ],
          "fileUrlPath": "src/types.jsii-boundary.ts",
          "releaseTag": "Public",
          "name": "BoundaryMockDefinition",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!BoundaryMockDefinition#definition:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly definition: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryAnyMockDescriptor",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryAnyMockDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "definition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!BoundaryMockDefinition#states:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly states: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryAnyState",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryAnyState:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "states",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class",
          "docComment": "/**\n * Supertype for all methods that return results. Use one of `BoundarySuccess`, `BoundaryFailure`, or one of the specialised `BoundarySuccessWith*` return types as appropriate. See the documentation for the method you're implementing for more information.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BoundaryResult "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundaryResult.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "BoundaryResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BoundaryResult` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(result: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResultType",
                  "canonicalReference": "@contract-case/case-boundary!~BoundaryResultType:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult#resultType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resultType: "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResultType",
                  "canonicalReference": "@contract-case/case-boundary!~BoundaryResultType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryResultTypeConstants:class",
          "docComment": "/**\n * Use these constants to determine what type of result a BoundaryResult is.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundaryResultTypeConstants "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundaryResultTypeConstants.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundaryResultTypeConstants",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResultTypeConstants.RESULT_FAILURE:member",
              "docComment": "/**\n * This is a failure\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESULT_FAILURE = "
                },
                {
                  "kind": "Content",
                  "text": "\"Failure\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESULT_FAILURE",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResultTypeConstants.RESULT_SUCCESS_HAS_ANY_PAYLOAD:member",
              "docComment": "/**\n * This is a success type with an arbitrary object payload\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESULT_SUCCESS_HAS_ANY_PAYLOAD = "
                },
                {
                  "kind": "Content",
                  "text": "\"SuccessAny\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESULT_SUCCESS_HAS_ANY_PAYLOAD",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResultTypeConstants.RESULT_SUCCESS_HAS_MAP_PAYLOAD:member",
              "docComment": "/**\n * This is a success type with a map payload\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESULT_SUCCESS_HAS_MAP_PAYLOAD = "
                },
                {
                  "kind": "Content",
                  "text": "\"SuccessMap\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESULT_SUCCESS_HAS_MAP_PAYLOAD",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResultTypeConstants.RESULT_SUCCESS:member",
              "docComment": "/**\n * This is a success type with no payload\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESULT_SUCCESS = "
                },
                {
                  "kind": "Content",
                  "text": "\"Success\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESULT_SUCCESS",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundaryStateHandler:class",
          "docComment": "/**\n * An interface for a state handler that only has setup\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BoundaryStateHandler "
            }
          ],
          "fileUrlPath": "src/boundary/StateHandler.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "BoundaryStateHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryStateHandler#setup:member(1)",
              "docComment": "/**\n * Call the user's state setup function.\n *\n * If the user provided no setup function, this should be a function that does nothing and returns a `BoundarySuccess`\n *\n * @returns Either a `BoundaryFailure` with `kind=BoundaryFailureKindConstants.CASE_CONFIGURATION_ERROR` or a `BoundarySuccess` when there's no variables returned, or a `BoundarySuccessWithMap` when there are variables returned\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setup(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setup"
            },
            {
              "kind": "Method",
              "canonicalReference": "@contract-case/case-boundary!BoundaryStateHandler#teardown:member(1)",
              "docComment": "/**\n * Call the user's state teardown function\n *\n * If the user provided no teardown function, this should be a function that does nothing and returns a `BoundarySuccess`\n *\n * @returns Either a `BoundaryFailure` with `kind=BoundaryFailureKindConstants.CASE_CONFIGURATION_ERROR` or a `BoundarySuccess`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "teardown"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundarySuccess:class",
          "docComment": "/**\n * This indicates that the result was successful\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundarySuccess extends "
            },
            {
              "kind": "Reference",
              "text": "BoundaryResult",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundarySuccess.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundarySuccess",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccess:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BoundarySuccess` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccess#resultType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resultType: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "RESULT_SUCCESS",
                  "canonicalReference": "@contract-case/case-boundary!RESULT_SUCCESS:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithAny:class",
          "docComment": "/**\n * This indicates a success with any arbitrary payload\n *\n * The calling method usually expects only one type of payload\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundarySuccessWithAny extends "
            },
            {
              "kind": "Reference",
              "text": "BoundaryResult",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundarySuccessWithAny.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundarySuccessWithAny",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithAny:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BoundarySuccessWithAny` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(payload: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithAny#payload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly payload: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithAny#resultType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resultType: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "RESULT_SUCCESS_HAS_ANY_PAYLOAD",
                  "canonicalReference": "@contract-case/case-boundary!RESULT_SUCCESS_HAS_ANY_PAYLOAD:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithMap:class",
          "docComment": "/**\n * This indicates a success returning a map of strings to arbitrary payloads\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BoundarySuccessWithMap extends "
            },
            {
              "kind": "Reference",
              "text": "BoundaryResult",
              "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/boundary/Result/BoundarySuccessWithMap.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BoundarySuccessWithMap",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithMap:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BoundarySuccessWithMap` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithMap#payload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly payload: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!BoundarySuccessWithMap#resultType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resultType: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "RESULT_SUCCESS_HAS_MAP_PAYLOAD",
                  "canonicalReference": "@contract-case/case-boundary!RESULT_SUCCESS_HAS_MAP_PAYLOAD:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants:class",
          "docComment": "/**\n * Convenience class to hold the values for LogLevel so that DSL layers don't need to know the actual value\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConfigLogLevelConstants "
            }
          ],
          "fileUrlPath": "src/boundary/ConfigLogLevelConstants.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ConfigLogLevelConstants",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.DEBUG:member",
              "docComment": "/**\n * Log information to help users find out what is happening during their tests (and warnings, and errors)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly DEBUG = "
                },
                {
                  "kind": "Content",
                  "text": "\"debug\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DEBUG",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.DEEP_MAINTAINER_DEBUG:member",
              "docComment": "/**\n * Log detailed debugging information for ContractCase maintainers (and debug, warn and errors)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly DEEP_MAINTAINER_DEBUG = "
                },
                {
                  "kind": "Content",
                  "text": "\"deepMaintainerDebug\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DEEP_MAINTAINER_DEBUG",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.ERROR:member",
              "docComment": "/**\n * Log when something has gone wrong during the execution of the test framework\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ERROR = "
                },
                {
                  "kind": "Content",
                  "text": "\"error\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.MAINTAINER_DEBUG:member",
              "docComment": "/**\n * Log debugging information for ContractCase maintainers (and debug, warn and errors)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly MAINTAINER_DEBUG = "
                },
                {
                  "kind": "Content",
                  "text": "\"maintainerDebug\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MAINTAINER_DEBUG",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.NONE:member",
              "docComment": "/**\n * Print no logs (note, results may still be printed - see `printResults`)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly NONE = "
                },
                {
                  "kind": "Content",
                  "text": "\"none\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NONE",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigLogLevelConstants.WARN:member",
              "docComment": "/**\n * Log when it seems likely that there is a misconfiguration, or an error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly WARN = "
                },
                {
                  "kind": "Content",
                  "text": "\"warn\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "WARN",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@contract-case/case-boundary!ConfigPublishConstants:class",
          "docComment": "/**\n * Convenience class to hold the values for the publish setting so that clients don't need to know the strings\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConfigPublishConstants "
            }
          ],
          "fileUrlPath": "src/boundary/ConfigPublishConstants.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ConfigPublishConstants",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigPublishConstants.ALWAYS:member",
              "docComment": "/**\n * Always publish contracts and verification results\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ALWAYS = "
                },
                {
                  "kind": "Content",
                  "text": "\"ALWAYS\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ALWAYS",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigPublishConstants.NEVER:member",
              "docComment": "/**\n * Never publish contracts or verification results\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly NEVER = "
                },
                {
                  "kind": "Content",
                  "text": "\"NEVER\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NEVER",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@contract-case/case-boundary!ConfigPublishConstants.ONLY_IN_CI:member",
              "docComment": "/**\n * Only publish contracts and verification results when in in CI according to https://github.com/watson/ci-info#supported-ci-tools\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ONLY_IN_CI = "
                },
                {
                  "kind": "Content",
                  "text": "\"ONLY_IN_CI\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ONLY_IN_CI",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig:interface",
          "docComment": "/**\n * Configure a ContractCase run. See the [configuration documentation](https://case.contract-testing.io/docs/reference/configuring) for more details.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ContractCaseBoundaryConfig "
            }
          ],
          "fileUrlPath": "src/boundary/config.types.ts",
          "releaseTag": "Public",
          "name": "ContractCaseBoundaryConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#baseUrlUnderTest:member",
              "docComment": "/**\n * The base URL for your real server, if you are testing an http server.\n *\n * @deprecated\n *\n * This will be moved to a config property that allows configuration for arbitrary mocks\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly baseUrlUnderTest?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseUrlUnderTest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#brokerBaseUrl:member",
              "docComment": "/**\n * The base URL for the contract broker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly brokerBaseUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "brokerBaseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#brokerBasicAuth:member",
              "docComment": "/**\n * The basic authentication username and password to access the contract broker.\n *\n * If this is specified along with brokerCiAccessToken, the basic auth is ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly brokerBasicAuth?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserNamePassword",
                  "canonicalReference": "@contract-case/case-boundary!UserNamePassword:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "brokerBasicAuth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#brokerCiAccessToken:member",
              "docComment": "/**\n * The access token to use for the contract broker. Must have CI scope.\n *\n * If this is specified along with brokerBasicAuth, the basic auth is ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly brokerCiAccessToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "brokerCiAccessToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#consumerName:member",
              "docComment": "/**\n * The name of the consumer for this contract.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly consumerName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "consumerName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#contractDir:member",
              "docComment": "/**\n * The directory where the contract will be written. If you provide this, ContractCase will generate the filename for you (unless `contractFilename` is specified, in which case this setting is ignored)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly contractDir?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractDir",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#contractFilename:member",
              "docComment": "/**\n * The filename where the contract will be written. If you provide this, `contractDir` is ignored\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly contractFilename?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractFilename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#logLevel:member",
              "docComment": "/**\n * logLevel - one of:\n *\n * `\"none\"` - Print no logs (note, results may still be printed - see `printResults`)\n *\n * `\"error\"` - Something has gone wrong during the execution of the test framework\n *\n * `\"warn\"` - It seems likely that there is a misconfiguration\n *\n * `\"debug\"` - Information to help users find out what is happening during their tests\n *\n * `\"maintainerDebug\" | \"deepMaintainerDebug\"` - debugging information for ContractCase maintainers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly logLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#printResults:member",
              "docComment": "/**\n * Whether results should be printed on standard out\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly printResults?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "printResults",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#providerName:member",
              "docComment": "/**\n * The name of the provider for this contract.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly providerName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "providerName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#publish:member",
              "docComment": "/**\n * Whether to publish contracts or verification results to the broker\n *\n * `\"ONLY_IN_CI\"` - only when in in CI according to https://github.com/watson/ci-info#supported-ci-tools `\"NEVER\"` or `false` - never publish `\"ALWAYS\"` or `true` - always publish (not recommended)\n *\n * Default: `\"ONLY_IN_CI\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly publish?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "publish",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#stateHandlers:member",
              "docComment": "/**\n * State setup and teardown handlers for any states this test requires (see [writing state handlers](https://case.contract-testing.io/docs/reference/state-handlers/)) for more details\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly stateHandlers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryStateHandler",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryStateHandler:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stateHandlers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#testRunId:member",
              "docComment": "/**\n * Unique ID for this segment of the test run - it must be unique within a run, but need not be unique between test runs. This is an internal implementation detail, and authors of DSL layers shouldn't expose it to clients.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly testRunId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "testRunId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#throwOnFail:member",
              "docComment": "/**\n * Whether or not the test should throw an error if the matching fails.\n *\n * Note that any configuration errors will still fail the suite regardless of this setting. This includes exceptions thrown during trigger functions, but does not include exceptions thrown by testResponse functions.\n *\n * Default: `true` in contract definition, `false` in contract verification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly throwOnFail?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "throwOnFail",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#triggerAndTest:member",
              "docComment": "/**\n * Call the native trigger and test function (if any) for this interaction pair.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly triggerAndTest?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITriggerFunction",
                  "canonicalReference": "@contract-case/case-boundary!ITriggerFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "triggerAndTest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!ContractCaseBoundaryConfig#triggerAndTests:member",
              "docComment": "/**\n * A Map of native trigger and test functions (if any) for several interaction pairs. Most useful during verification, but also valid during definition\n *\n * Keyed by `${requestName}::${responseName}`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly triggerAndTests?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "ITriggerFunction",
                  "canonicalReference": "@contract-case/case-boundary!ITriggerFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "triggerAndTests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!ICombinedPrinter:interface",
          "docComment": "/**\n * A convenience interface that combines result printing and log printing\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICombinedPrinter extends "
            },
            {
              "kind": "Reference",
              "text": "IResultPrinter",
              "canonicalReference": "@contract-case/case-boundary!IResultPrinter:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ILogPrinter",
              "canonicalReference": "@contract-case/case-boundary!ILogPrinter:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "ICombinedPrinter",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!IInvokeCoreTest:interface",
          "docComment": "/**\n * Interface to tell ContractCase to run the test indicated in a call to an IRunTestCallback\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IInvokeCoreTest "
            }
          ],
          "fileUrlPath": "src/boundary/IRunTestCallback.ts",
          "releaseTag": "Public",
          "name": "IInvokeCoreTest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!IInvokeCoreTest#verify:member(1)",
              "docComment": "/**\n * Call this to tell the ContractCase core to actually invoke the test. During verification, by default failed verification doesn't return an error Result, but failed configuration or core bugs will.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verify(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "verify"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!ILogPrinter:interface",
          "docComment": "/**\n * Implement this interface to give ContractCase a way to print logs in your target language. Most platforms will want to print to standard out, but some might need to log to a file or otherwise collate the logs.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILogPrinter "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "ILogPrinter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!ILogPrinter#log:member(1)",
              "docComment": "/**\n * Called by ContractCase to ask the DSL to print a log line. You do not need to filter calls to this interface, it will only be called when it is appropriate to print.\n *\n * @param level - A `LogLevel` string, either `error`, `warn`, `debug`, `maintainerDebug` or `deepMaintainerDebug` Use this to programmatically decide any colour formatting.. (although `none` is a possible log level, this function will never be called with `none`).\n *\n * @param timestamp - The timestamp generated by ContractCase, ready for printing. No extra formatting is necessary\n *\n * @param version - The version string for the current ContractCase stack (at low log levels, this is just the core version)\n *\n * @param typeString - A rendered version of the LogLevel. Do not rely on this value programmatically, use the `level` parameter instead.\n *\n * @param location - A string that represents the location that this log came from\n *\n * @param message - The main message of this log line\n *\n * @param additional - Any additional output to print on extra lines (you may want to indent this when printing)\n *\n * @returns A `BoundaryResult` type indicating whether there were errors during printing. Either a BoundarySuccess for no errors, or BoundaryFailure (with error details) in the event of a failure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "log(level: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", timestamp: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", typeString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", additional: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "timestamp",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "version",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "typeString",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "location",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "additional",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                }
              ],
              "name": "log"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!IResultPrinter:interface",
          "docComment": "/**\n * Interface for printing results\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IResultPrinter "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "IResultPrinter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!IResultPrinter#printMatchError:member(1)",
              "docComment": "/**\n * Called by ContractCase to ask the DSL to print an individual match error line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "printMatchError(MatchErrorDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "PrintableMatchError",
                  "canonicalReference": "@contract-case/case-boundary!PrintableMatchError:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "MatchErrorDescription",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "printMatchError"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!IResultPrinter#printMessageError:member(1)",
              "docComment": "/**\n * Called by ContractCase to ask the DSL to print an error during testing that doesn't have an expected / actual value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "printMessageError(messageErrorDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "PrintableMessageError",
                  "canonicalReference": "@contract-case/case-boundary!PrintableMessageError:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "messageErrorDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "printMessageError"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!IResultPrinter#printTestTitle:member(1)",
              "docComment": "/**\n * Called by ContractCase to ask the DSL to print a test title or main execution details (eg for contract downloading).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "printTestTitle(titleDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "PrintableTestTitle",
                  "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "titleDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "printTestTitle"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!IRunTestCallback:interface",
          "docComment": "/**\n * This interface allows the DSL layer to invoke the test. If your test runner supports programmatically running different tests, then use this interface to tell a BoundaryContractVerifier how to call back to your DSL with a test name\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunTestCallback "
            }
          ],
          "fileUrlPath": "src/boundary/IRunTestCallback.ts",
          "releaseTag": "Public",
          "name": "IRunTestCallback",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!IRunTestCallback#runTest:member(1)",
              "docComment": "/**\n * Called once for each test in a Verification run. In an implementation, you should tell your test runner that it is running a test, and what the name of the test is.\n *\n * @param testName - The name of this test\n *\n * @param invoker - an IInvokeCoreTest to tell the ContractCase core that you'd like it to run the test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runTest(testName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", invoker: "
                },
                {
                  "kind": "Reference",
                  "text": "IInvokeCoreTest",
                  "canonicalReference": "@contract-case/case-boundary!IInvokeCoreTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "testName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "invoker",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "runTest"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!ITriggerFunction:interface",
          "docComment": "/**\n * Interface called by ContractCase to invoke user's test code.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITriggerFunction "
            }
          ],
          "fileUrlPath": "src/boundary/ITriggerFunction.ts",
          "releaseTag": "Public",
          "name": "ITriggerFunction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contract-case/case-boundary!ITriggerFunction#trigger:member(1)",
              "docComment": "/**\n * Trigger the user's test code and test the response from it.\n *\n * @returns BoundarySuccess when successful; BoundaryFailure with kind=BoundaryFailureKindConstants.CASE_TRIGGER_ERROR if the trigger fails; BoundaryFailure with kind=BoundaryFailureKindConstants.CASE_VERIFY_RETURN_ERROR if the verification function fails.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "trigger(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BoundaryResult",
                  "canonicalReference": "@contract-case/case-boundary!BoundaryResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "trigger"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!PrintableMatchError:interface",
          "docComment": "/**\n * Data class to hold data to print a message error during matching\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PrintableMatchError "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "PrintableMatchError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#actual:member",
              "docComment": "/**\n * A string representation of the actual data received (may contain newlines)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly actual: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actual",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#errorTypeTag:member",
              "docComment": "/**\n * The machine-readable type for the cause of this error, for printing after the error message to make it easy to search for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorTypeTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorTypeTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#expected:member",
              "docComment": "/**\n * A string representation of the expected data (may contain newlines)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly expected: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#kind:member",
              "docComment": "/**\n * The red highlighted blob, eg \"MATCHING ERROR\" or \"TRIGGER FUNCTION ERROR\". Could be any string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#location:member",
              "docComment": "/**\n * The location the error happened, for printing at the top of the error message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#locationTag:member",
              "docComment": "/**\n * The tag line for the location the error happened, for printing after the error message. This might have more information than the `location` above.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly locationTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "locationTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMatchError#message:member",
              "docComment": "/**\n * A summary of the error. Could be any string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!PrintableMessageError:interface",
          "docComment": "/**\n * Data class to hold data to print a message error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PrintableMessageError "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "PrintableMessageError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMessageError#errorTypeTag:member",
              "docComment": "/**\n * The machine-readable type for the cause of this error, for printing after the error message to make it easy to search for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorTypeTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorTypeTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMessageError#kind:member",
              "docComment": "/**\n * The red highlighted blob, eg \"MATCHING ERROR\" or \"TRIGGER FUNCTION ERROR\". Could be any string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMessageError#location:member",
              "docComment": "/**\n * The location the error happened, for printing at the top of the error message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMessageError#locationTag:member",
              "docComment": "/**\n * The tag line for the location the error happened, for printing after the error message. This might have more information than the `location` above.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly locationTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "locationTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableMessageError#message:member",
              "docComment": "/**\n * A summary of the error. Could be any string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle:interface",
          "docComment": "/**\n * Data class to hold data for a test title print line\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PrintableTestTitle "
            }
          ],
          "fileUrlPath": "src/boundary/ILogPrinter.ts",
          "releaseTag": "Public",
          "name": "PrintableTestTitle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle#additionalText:member",
              "docComment": "/**\n * Any additional text to print after the title (may include newlines)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly additionalText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "additionalText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle#icon:member",
              "docComment": "/**\n * An icon for the start of the line (usually a single character emoji, but could be any string)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly icon: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle#kind:member",
              "docComment": "/**\n * Either 'success' to indicate success, or 'failure' to indicate failure\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!PrintableTestTitle#title:member",
              "docComment": "/**\n * The title to print (will not include newlines)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contract-case/case-boundary!UserNamePassword:interface",
          "docComment": "/**\n * Describes a username and password\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UserNamePassword "
            }
          ],
          "fileUrlPath": "src/boundary/config.types.ts",
          "releaseTag": "Public",
          "name": "UserNamePassword",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!UserNamePassword#password:member",
              "docComment": "/**\n * The password for basic auth\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contract-case/case-boundary!UserNamePassword#username:member",
              "docComment": "/**\n * The username for basic auth\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
